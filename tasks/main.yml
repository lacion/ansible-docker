---

- name: Ensure old versions of Docker are not installed.
  package:
    name: '{{ item }}'
    state: absent
  with_items:
    - docker
    - docker-engine

- name: Ensure dependencies are installed.
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Add Docker apt key.
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    state: present
  register: add_repository_key

- name: Ensure curl is present (on older systems without SNI).
  package: name=curl state=present
  when: add_repository_key is failed

- name: Add Docker apt key (alternative for older systems without SNI).
  shell: "curl -sSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
  args:
    warn: no
  when: add_repository_key is failed

- name: Add Docker repository.
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: yes

- name: Install Docker.
  package:
    name: "docker-ce"
    state: "present"
  notify: restart docker

- name: Ensure Docker is started and enabled at boot.
  service:
    name: docker
    state: "started"
    enabled: "yes"

- name: Ensure handlers are notified now to avoid firewall conflicts.
  meta: flush_handlers
  when: docker_restart_on_package_change

- include_tasks: docker-compose.yml
  when: docker_install_compose